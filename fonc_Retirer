void retirer( struct node *q,struct node1 **q1){
    struct node1 *temp1, *r;
    operation op;
    temp1 = *q1;
    struct node *aux; 
    produit p;
    aux=q;
    int m;
    int minimum_stock=10;
    printf("Donner la reference  : \n");
    scanf("%ld", &p.ref);
    while(p.ref<0){
        printf("la reference doit etre positive");
        scanf("%ld", &p.ref);
    }
    while((aux != NULL) && ((aux->val.ref)!=(p.ref))){
    aux=aux->suiv;
    } 
    if(aux == NULL){
        printf("Ce produit n'exite pas \n");
    }else{
        
        printf("Combien de pieces voulez-vous retirer: \n");
        scanf("%d", &m);
        while(m<0){
        printf("le nombre doit etre positive");
        scanf("%d", &m);
    }
        if(m>aux->val.nbr){
            printf("\nLe stock n'est pas suffisant pour ce retrait\n");
        }else{
            aux->val.nbr=aux->val.nbr-m;
        printf("donner la date \nAnnee:\n");
    scanf("%i",&op.annee);
     while(op.annee<0){
        printf("Donner une Annee positive:\n");
        scanf("%i",&op.annee);
    }
     printf("Mois: \n");
    scanf("%i",&op.mois);
    while(op.mois<0 || op.mois>12){
        printf("Donner un mois entre 1 et 12 :\n");
        scanf("%i",&op.mois);
    }
     printf("Jour: \n");
    scanf("%i",&op.jour);
    while(op.jour<0 || op.jour>31){
        printf("Donner un jour entre 1 et 31 :\n");
        scanf("%i",&op.jour);
    }
    char entre[]="Retrait";
    strcpy(op.type,entre);
    op.prix=aux->val.prix;
    strcpy(op.nom,aux->val.nom);
    op.ref=aux->val.ref;
    op.nbr=m;
    while( temp1 -> suiv!= NULL)
            temp1 = temp1 -> suiv;
        r = malloc(sizeof(struct node1));
        r -> val = op;
        r -> suiv = NULL;
        temp1 -> suiv = r;
    
    printf("\nOperation effectuee avec succees \n " );
    if (aux->val.nbr <= minimum_stock){
        printf("\nALERTE : il vous reste que %i pieces, donc il faut alimenter des %s\n",aux->val.nbr , aux->val.nom);
    }
        }
        
    }
    
}
