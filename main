#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct {
    char nom[20];
    float prix; 
    long ref;
    int nbr;
}produit;

typedef struct{
    char type[20];
    int jour,mois,annee;
    char nom[20];
    float prix; 
    long ref;
    int nbr;
} operation;

struct node1{
    operation val;
    struct node1 *suiv;
};

struct node{
    produit val;
    struct node *suiv;
};
int main(){
    int e=1;
    long refr;
    int i,j;
    
    struct node *q;
    q=NULL;
    struct node1 *q1;
    q1=NULL;
    printf("\n\n\t\t ************************************************************");
		printf("\n\t\t                         Bienvenue                  ");
        
		printf("\n\t\t ************************************************************ \n");
        printf("\n");
    
    menu();
    while(e==1){
    int n;
     
    printf("\n");
    printf("  Donner votre choix :\n");
    scanf("%d",&n);
    while((n<1)||(n>8)){
        printf("  Donner votre choix :\n");
        scanf("%d",&n);
    }
    
    switch (n){
        case 1: i=0;j=0;
                struct node *aux ;
                aux=q;
                while(aux!=NULL){
                    aux=aux->suiv;
                    i++;
                }
                ajout_nouveau_produit (&q);
                aux=q;
                while(aux!=NULL){
                    aux=aux->suiv;
                    j++;
                }
                if(i!=j){
                    struct node *aux ;
                aux=q;
                while( aux -> suiv!= NULL)
                aux = aux -> suiv;
                
                ajout_arch(&q1,q,1,aux->val.nbr);
                printf("\nOperation effectuee avec succees \n" );
                }
                
        printf("\n");         
        e=retour();        
        break;
        case 2:
                
                ajout(q,&q1);
                printf("\n");
          e=retour();      
        break;
        case 3:chercher(q);
        printf("\n");
        e=retour();
        break;
        case 4: modifier(q);
        printf("\n");
        e=retour();
        break;
        case 5: retirer(q,&q1);
        printf("\n");
        e=retour();
        break;
        case 6: afficher (q);
        printf("\n");
        e=retour();
        break;
        case 7: afficher_hist(q1);
        printf("\n");
        e=retour();
        break;
        case 8: e=1;exit(0);
        break;
        
        
    }
}
exit(0);
}
